# Name of our action
name: Release

# The event that will trigger the action
on:
  push:
    branches:
      - main
    paths:
      - ".github/**"
      - "src/**"
      - "package.json"
      - "pnpm-lock.yaml"
  pull_request:
    branches:
      - main
    paths:
      - ".github/**"
      - "src/**"
      - "package.json"
      - "pnpm-lock.yaml"

# what the action will do
jobs:
  release:
    # The operating system it will run on
    runs-on: ubuntu-latest
    # This check needs to be in place to prevent a publish loop with auto and github actions
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    # The list of steps that the action will go through
    steps:
      - uses: actions/checkout@v3
      - name: Prepare repository
        run: git fetch --unshallow --tags

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_EMAIL: ${{ secrets.GIT_EMAIL }}
        run: |
          pnpm install
          pnpm build
          pnpm release $GIT_EMAIL
